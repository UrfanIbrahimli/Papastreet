@using PapaStreet.Common.Resources
@(Html.DevExtreme().DataGrid<PapaStreet.BLL.DTOs.PricePlanHistoryDto>()
            .ID("usersGridContainer")
            .DataSource(d => d.Mvc().Controller("PricePlanHistory").LoadAction("Data").Key("Id"))
            .RemoteOperations(false)
            .AllowColumnReordering(true)
            .RowAlternationEnabled(true)
            .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
            .ShowBorders(true)
            .Paging(p => p.PageSize(10))
            .Pager(p => p.ShowPageSizeSelector(true).AllowedPageSizes(new int[] { 10, 20, 50 }))
            //.SearchPanel(s => s.Visible(true).HighlightCaseSensitive(true))
            .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
            //.Export(e => e.Enabled(true).FileName($"UsersGrid-{DateTime.Now.ToString()}"))
            .ColumnMinWidth(120)
            //.HeaderFilter(headerFilter => headerFilter.Visible(true))
            .Columns(columns =>
            {

                columns.AddFor(m => m.Customer.Email)
                    .Caption(UI.Email);

                columns.AddFor(m => m.Customer.FirstName)
               .Caption(UI.FirstName);

                columns.AddFor(m => m.Customer.LastName)
                .Caption(UI.LastName);

                columns.AddFor(m => m.FromPricePlan.Name)
                .Caption(UI.FromPricePlan);

                columns.AddFor(m => m.ToPricePlan.Name)
                .Caption(UI.ToPricePlan);

                columns.AddFor(m => m.StartDate)
                .Caption(UI.StartDate);

                columns.AddFor(m => m.EndDate)
                .Caption(UI.EndDate);

                columns.AddFor(m => m.UsedAnnouncementCount)
               .Caption(UI.UsedAnnouncementCount);

                columns.AddFor(m => m.StatusName)
       .Caption(UI.Status)
       .AllowFiltering(false)
       .AllowSorting(false)
       .AllowHeaderFiltering(true)
       .CellTemplate(@<text>
        <span class="<%=value%>"><%=value%></span>
    </text>);

        columns.AddFor(m => m.Id)
            .Caption(UI.Operations)
            .Width(150)
            .AllowFiltering(false)
            .AllowSorting(false)
            .CellTemplate(@<text>

                <button class="btn btn-sm btn-primary block" onclick="CustomerDetailsModal('@Url.Action("Details", "PricePlanHistory")','<%=value%>')">
                    <i class="icon-eye"></i>
                </button>
                <button class="btn btn-sm btn-danger"
                        onclick="ShowRemoveModal('@Url.Action("Remove", "PricePlanHistory")', '<%=value%>')">
                    <i class="icon-trash"></i>
                </button>

            </text>);

            })
)
