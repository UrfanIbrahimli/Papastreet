@using PapaStreet.Common.Resources

@(Html.DevExtreme().DataGrid<PapaStreet.BLL.DTOs.AnnouncementDto>()
    .ID("usersGridContainer")
    .DataSource(d => d.Mvc().Controller("Announcement").LoadAction("Data").Key("Id"))
    .RemoteOperations(true)
    .AllowColumnReordering(true)
    .RowAlternationEnabled(true)
    .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
    .ShowBorders(true)
    .Paging(p => p.PageSize(10))
    .Pager(p => p.ShowPageSizeSelector(true).AllowedPageSizes(new int[] { 10, 20, 50 }))
    //.SearchPanel(s => s.Visible(true).HighlightCaseSensitive(true))
    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Standard))
    //.Export(e => e.Enabled(true).FileName($"UsersGrid-{DateTime.Now.ToString()}"))
    .ColumnMinWidth(120)
    .HeaderFilter(headerFilter => headerFilter.Visible(true))
    .Columns(columns =>
    {

    columns.AddFor(m => m.PropertyType.Name)
            .Caption(UI.PropertyType);

    columns.AddFor(m => m.Repair.Name)
          .Caption(UI.Repair);

    columns.AddFor(m => m.AnnouncementType.Name)
        .Caption(UI.AnnouncementType);

    columns.AddFor(m => m.City.Name)
        .Caption(UI.Cities);

    columns.AddFor(m => m.VendorTypeName)
        .Caption(UI.VendorType)
         .AllowFiltering(false)
         .AllowSorting(false);

    columns.AddFor(m => m.Amount)
        .Caption(UI.Amount);

    columns.AddFor(m => m.SourceTypeName)
        .Caption(UI.SourceType)
         .AllowFiltering(false)
         .AllowSorting(false);

    columns.AddFor(m => m.ExpirationDate)
    .Caption(UI.ExpirationDate)
     .AllowFiltering(false)
     .AllowSorting(false);

    columns.AddFor(m => m.AnnouncementAddition)
.Caption(UI.AnnouncementAdditionals)
.AllowFiltering(false)
.AllowSorting(false);

    columns.AddFor(m => m.StatusName)
        .Caption(UI.Status)
        .AllowFiltering(false)
        .AllowSorting(false)
        .AllowHeaderFiltering(true)
        .CellTemplate(@<text>
                            <span class="<%=value%>"><%=value%></span>
                      
                            
                        </text>);

columns.AddFor(m => m.Id)
.Caption(UI.Operations)
.Width(160)
.AllowFiltering(false)
.AllowSorting(false)
.CellTemplate(@<text>
    <button class="btn btn-sm btn-primary" onclick="AnnouncementDetailsModal('@Url.Action("Details", "Announcement")','<%=value%>')" >
        <i class="icon-eye"></i>
    </button>
    <button class="btn btn-sm btn-primary"
            onclick="HrefMe('@Url.Action("Form", "Announcement")', '<%=value%>')">
        <i class="icon-pencil4"></i>
    </button>
    <button class="btn btn-sm btn-danger"
            onclick="ShowRemoveModal('@Url.Action("Remove", "Announcement")', '<%=value%>')">
        <i class="icon-trash"></i>
    </button>

</text>);

        })
)
