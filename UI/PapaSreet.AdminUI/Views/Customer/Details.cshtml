@using PapaStreet.Common.Resources
@using PapaStreet.Common.Constants;
@model PapaStreet.BLL.DTOs.CustomerDto

<div class="row">
    <div class="col-lg-6">
        <div class="form-group">
            <label>@UI.FirstName</label>
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-lg-6">
        <div class="form-group">
            <label>@UI.LastName</label>
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        <div class="form-group">
            <label>@UI.Email</label>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        <div class="form-group">
            <label>@UI.AboutMe</label>
            @Html.TextBoxFor(m => m.About, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.About, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        <div class="form-group">
            <label>@UI.Address</label>
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        <div class="form-group">
            <label>@UI.Status</label>
            @Html.TextBoxFor(m => m.StatusName, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.StatusName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
        <div class="form-group">
            <label>@UI.PricePlan</label>
            @Html.TextBoxFor(m => m.PricePlan.Name, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.PricePlanId, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<br />

@if (Model != null && Model.Status == Enums.Status.Active)
{

    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <div class="d-flex justify-content-start align-items-center">
                    <button type="button" class="btn bg-danger legitRipple"
                            onclick="BlockCustomer('@Model.Id','@Url.Action("Block", "Customer")')">
                        @UI.Block
                    </button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <div class="d-flex justify-content-start align-items-center">
                    <button type="button" class="btn bg-blue legitRipple"
                            onclick="UnBlockCustomer('@Model.Id','@Url.Action("Unblock", "Customer")')">
                        @UI.Unblock
                    </button>
                </div>
            </div>
        </div>
    </div>
}
